% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Genericos.R, R/35-Deliver-SQLite.R
\docType{methods}
\name{Guardar}
\alias{Guardar}
\alias{Guardar,data.frame,ConexionSQLite-method}
\title{Guardar}
\usage{
Guardar(x, conexion, ...)

\S4method{Guardar}{data.frame,ConexionSQLite}(x, conexion)
}
\arguments{
\item{x}{El objeto a guardar.}

\item{conexion}{Una conexión al archivo o base de datos donde se desea guardar el objeto.}
}
\value{
Verdadero si el objeto fue guardado. Falso, de lo contrario.
}
\description{
Guarda un objeto, usando una conexión.

Guarda un \code{tibble} o \code{data.frame} en una conexión \link{ConexionSQLite}.
}
\details{
Esta función requiere del objeto y la conexión, sin ningún otro detalle adicional.

Esta función puede ser usada en componentes como Fact Table Builders, o Fact Table Providers. También como \emph{standalone}.
}
\section{Methods (by class)}{
\itemize{
\item \code{x = data.frame,conexion = ConexionSQLite}: Guarda \link{data.frame} en en una conexión \linkS4class{ConexionSQLite}.
}}

\section{Condiciones y Errores}{


Si el objeto es \link{data.frame} y la conexión un \linkS4class{ConexionSQLite}, entonces arroja error si la conexión a la base de datos falla (usa \code{DBI::dbConnect} internamente).
}

\examples{
\dontrun{
  conexion <- ConexionSQLiteTabla(RutaDB = "unaBaseDeDatos.sqlite"
    , NombreTabla = "unNombreDeTabla")
  fueGuardado <- Guardar(unDataFrame_Tibble, conexion)
  stopifnot(fueGuardado)
}

}
