% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/04-Data-Cleansing.R
\name{ValidarFila}
\alias{ValidarFila}
\title{Validación de Fila (Genérico).}
\usage{
ValidarFila(Fila, Registro)
}
\arguments{
\item{Fila}{Un objeto \linkS4class{Fila} o descendiente}

\item{Registro}{es una fila del data frame. Las columnas deben tener los mismos nombres que el slot del objeto \code{Fila@Columnas}.}
}
\value{
\linkS4class{Fila} o descendiente, con validación si el método existe, o la fila tal cual ingresa en el argumento si el método no existe.
}
\description{
Este genérico debe ser reemplazado con métodos que utilicen la clase \linkS4class{Fila}, o de objetos que hereden directamente de la clase.
}
\details{
El autor del ETL generará un método con todas las validaciones necesarias para la fila de un conjunto de datos. Deberá devolver un objeto \linkS4class{Fila} o descendiente, con los campos completos. Especialmente, señalando si la fila se encuentra en error, el índice de los campos que se encuentran en error, y los mensajes de error.

Esta función se llama dentro de \link{AgregarFila}; la cual primero verifica si existe un método apropiado para la \linkS4class{Fila} o descendiente, antes de agregar la fila a la colección de \linkS4class{Filas}. De lo contrario, carga la fila con el campo \code{FueValidada = FALSE}.
}
\section{Ubicación del método}{


Lo más apropiado es definir el método en .GlobalEnv.
}

\examples{
cols <- Columnas(c("ID", "nombre", "peso"), c("integer", "character", "numeric"))

fila <- Fila(cols)

data <-
  data.frame(altura = c(1.3, 2.1, 1, 1.81),
             Nombre = c("Frodo", "Sauron", "Golum", "Gandalf"))

setMethod(
  "ValidarFila",
  signature = c(Fila = "Fila", Registro = "data.frame"),
  definition =
    function(Fila, Registro)
    {
      if ("altura" \%in\% filaColNombre(Fila))
      {
        if (Registro$altura < 1.5)
        {
          filaError(Fila) <- TRUE
          filaMensajeError(Fila) <- "Altura inapropiada"
          filaColumnaEnError(Fila) <-
            purrr::detect_index(colnames(Registro), function(x)
              x == "altura")
        }
      }
      return(Fila)
    }
  , where = .GlobalEnv
)

fila <-
  Fila( Columnas(Nombres = colnames(data), c("numeric", "character")))

filas <-
  ValidarFilas(Fila = fila, Datos = data)


filasCorrectas(filas)
filasEnError(filas)
filasErrores(filas)
filasErroresPos(filas)
filasStatus(filas)
}
